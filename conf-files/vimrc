" -----------------------------------------------------------------------------
" PLUGINS INSTALLATION
" -----------------------------------------------------------------------------

call plug#begin('~/.vim/plugged')

" General
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'scrooloose/nerdtree'
Plug 'scrooloose/nerdcommenter'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-surround'
Plug 'jiangmiao/auto-pairs'
Plug 'tpope/vim-fugitive'
Plug 'AndrewRadev/splitjoin.vim'
Plug 'wincent/ferret'

" Language Support
Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }
Plug 'w0rp/ale'
Plug 'Valloric/YouCompleteMe', { 'do': 'python install.py --clang-completer --go-completer --ts-completer --java-complete' }

" Appearance
Plug 'jacoborus/tender'
Plug 'edkolev/tmuxline.vim'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'ryanoasis/vim-devicons'

call plug#end()

" -----------------------------------------------------------------------------
" PLUGINS CONFIGURATION
" -----------------------------------------------------------------------------

" fatih/vim-go
let g:go_textobj_include_function_doc = 1
let g:go_addtags_transform = 'camelcase'
let g:go_highlight_types = 1
let g:go_highlight_functions = 1
let g:go_highlight_operators = 1
let g:go_highlight_extra_types = 1
let g:go_highlight_build_constraints = 1
let g:go_metalinter_enabled = ['vet', 'golint', 'errcheck']
let g:go_metalinter_autosave = 1
let g:go_metalinter_autosave_enabled = ['vet', 'golint']
let g:go_fmt_command = "goimports"

" junegunn/fzf
set rtp+=~/.fzf
let g:fzf_preview_window = ''
let g:fzf_history_dir = '~/.local/share/fzf-history'
let g:fzf_tags_command = 'ctags --fields=+l -R'
let g:fzf_colors =
    \ { 'fg':    ['fg', 'Normal'],
    \ 'bg':      ['bg', 'Normal'],
    \ 'hl':      ['fg', 'Comment'],
    \ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],
    \ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],
    \ 'hl+':     ['fg', 'Statement'],
    \ 'info':    ['fg', 'PreProc'],
    \ 'prompt':  ['fg', 'Conditional'],
    \ 'pointer': ['fg', 'Exception'],
    \ 'marker':  ['fg', 'Keyword'],
    \ 'spinner': ['fg', 'Label'],
    \ 'header':  ['fg', 'Comment'] }

" edkolev/tmuxline.vim
let NERDTreeIgnore=['\.pyc$', '\.min\.js$', '\.min\.css$', '\~$']

" w0rp/ale
let g:ale_completion_enabled = 1
let g:ale_sign_column_always = 1
let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
let g:ale_pattern_options = {
\ '\.min\.js$': {'ale_linters': [], 'ale_fixers': []},
\ '\.min\.css$': {'ale_linters': [], 'ale_fixers': []},
\}
let g:ale_linters = {
\   'python': ['pylint'],
\   'go': ['golint'],
\   'xml': ['xmllint'],
\   'html': ['htmlhint'],
\   'javascript': ['eslint'],
\   'css': ['csslint'],
\}
let g:ale_fixers = {
\   '*': ['remove_trailing_lines', 'trim_whitespace'],
\}

" edkolev/tmuxline.vim
let g:tmuxline_preset = {
    \'a'    : '#S',
    \'win'  : '#I #W',
    \'cwin' : '#I #W',
    \'y'    : '%R',
    \'z'    : '#H',
    \ 'options': {'status-justify': 'left'}}
let g:tmuxline_separators = {
  \ 'left' : '',
  \ 'left_alt': '',
  \ 'right' : '',
  \ 'right_alt' : '',
  \ 'space' : ' '}

" vim-airline/vim-airline
let g:airline_symbols = {}
let g:airline_left_sep = ''
let g:airline_right_sep = ''
let g:airline_symbols.crypt = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = ''
let g:airline_symbols.maxlinenr = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.paste = 'ρ'
let g:airline_symbols.spell = 'Ꞩ'
let g:airline_symbols.notexists = 'Ɇ'
let g:airline_symbols.whitespace = ''
let g:airline#extensions#ale#enabled = 1
let g:airline#extensions#fugitiveline#enabled = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#left_sep = ''
let g:airline#extensions#tabline#left_alt_sep = ''
let g:airline#extensions#tabline#formatter = 'unique_tail'
let g:airline_powerline_fonts = 1
let g:airline_theme = 'base16_default'
let g:airline_section_c = '%{airline#util#wrap(airline#parts#readonly(),0)}%'
let g:airline_section_x = ''
let g:airline_section_z = '%l/%L:%v'
let g:airline_mode_map = {
    \ '__' : '-',
    \ 'n'  : 'N',
    \ 'i'  : 'I',
    \ 'R'  : 'R',
    \ 'c'  : 'C',
    \ 'v'  : 'V',
    \ 'V'  : 'V',
    \ '' : 'V',
    \ 's'  : 'S',
    \ 'S'  : 'S',
    \ '' : 'S',
    \ 't'  : 'T',
    \ }

" Valloric/YouCompleteMe
let g:ycm_python_binary_path = 'python'
let g:ycm_collect_identifiers_from_tags_files = 1
let g:ycm_use_ultisnips_completer = 1
let g:ycm_seed_identifiers_with_syntax = 1
let g:ycm_complete_in_comments = 1
let g:ycm_complete_in_strings = 1
let g:ycm_autoclose_preview_window_after_completion=1

" scrooloose/nerdtree
let g:NERDTreeQuitOnOpen = 1
let g:NERDTreeMinimalUI = 1
let g:NERDTreeShowLineNumbers = 1
let g:NERDTreeGitStatusIndicatorMapCustom = {
    \ 'Modified'  : '✹',
    \ 'Staged'    : '✚',
    \ 'Untracked' : '✭',
    \ 'Renamed'   : '➜',
    \ 'Unmerged'  : '═',
    \ 'Deleted'   : '✖',
    \ 'Dirty'     : '✗',
    \ 'Clean'     : '✔︎',
    \ 'Ignored'   : '☒',
    \ 'Unknown'   : '?'
    \ }

" ryanoasis/vim-devicons
let g:WebDevIconsOS = 'Unix'
let g:WebDevIconsNerdTreeBeforeGlyphPadding = ''
let g:WebDevIconsNerdTreeAfterGlyphPadding = ' '
let g:WebDevIconsNerdTreeGitPluginForceVAlign = 1
let g:webdevicons_enable_airline_tabline = 0
let g:WebDevIconsUnicodeDecorateFolderNodes = 1
let g:DevIconsEnableFoldersOpenClose = 1
let g:DevIconsEnableFolderExtensionPatternMatching = 0

" -----------------------------------------------------------------------------
" VIM INTERNAL CONFIGURATION
" -----------------------------------------------------------------------------

" Load the plugin for specific file types
filetype plugin on

" Sync vim's clipboard with X11 system without use registers
set clipboard=unnamed
set clipboard=unnamedplus

" Enable numeration lines
set number
set relativenumber

" Incremental search
set incsearch

" Enable color syntax highlight
syntax enable

" Set spaces character
set listchars=tab:»\ ,trail:·,nbsp:·,extends:>,precedes:<
set list

" Set Theme
colorscheme tender

" Status bar
set laststatus=2

" Set identation
set expandtab
set tabstop=4
set softtabstop=4
set shiftwidth=4

" Search down into subfolders and provides completion for file-related tasks
set path+=**

" Display all matching files when we tab complete
set wildmode=list:longest,full

" Set utf8 as standard encoding
set encoding=utf-8

" Sets interprets to decimals notation
set nrformats=

" Disable autocomment
autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o

" -----------------------------------------------------------------------------
" SHORCUTS
" -----------------------------------------------------------------------------

" SHORTCUT: Moving between buffers
:noremap bn :bnext<CR>
:noremap bp :bprevious<CR>

" SHORTCUT: fatih/vim-go
autocmd FileType go nmap <leader><F9> :GoRun %<CR>

" SHORTCUT: w0rp/ale
nmap <silent> <C-k> <Plug>(ale_previous_wrap)
nmap <silent> <C-j> <Plug>(ale_next_wrap)

" SHORTCUT: junegunn/fzf
noremap <leader>f :Files<CR>
noremap <leader>a :Ag<CR>
noremap <leader>t :BTags<CR>
noremap <leader>T :Tags<CR>
noremap <leader>l :BLines<CR>
noremap <leader>L :Lines<CR>
noremap <leader>C :Commits<CR>
noremap <leader>b :Buffers<CR>
imap <C-x><C-w> <plug>(fzf-complete-word)
imap <C-x><C-p> <plug>(fzf-complete-path)
imap <C-x><C-f> <plug>(fzf-complete-file-ag)
imap <C-x><C-l> <plug>(fzf-complete-line)
inoremap <expr> <c-x><c-k> fzf#complete('cat /usr/share/dict/words')

" SHORTCUT: Valloric/YouCompleteMe
map <leader>g :YcmCompleter GoToDefinitionElseDeclaration<CR>

" SHORTCUT: scrooloose/nerdtree
noremap <F2> :NERDTreeToggle<CR>
noremap <leader>w :NERDTreeFind<CR>
